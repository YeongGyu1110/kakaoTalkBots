/*
한글분석기

/분석 [단어]: 단어를 쪼갬

*/

function analyzeHangulChar(char) {
    const CHO = ["ㄱ", "ㄲ", "ㄴ", "ㄷ", "ㄸ", "ㄹ", "ㅁ", "ㅂ", "ㅃ", "ㅅ", "ㅆ", "ㅇ", "ㅈ", "ㅉ", "ㅊ", "ㅋ", "ㅌ", "ㅍ", "ㅎ"];
    const JUNG = ["ㅏ", "ㅐ", "ㅑ", "ㅒ", "ㅓ", "ㅔ", "ㅕ", "ㅖ", "ㅗ", "ㅘ", "ㅙ", "ㅚ", "ㅛ", "ㅜ", "ㅝ", "ㅞ", "ㅟ", "ㅠ", "ㅡ", "ㅢ", "ㅣ"];
    const JONG = ["", "ㄱ", "ㄲ", "ㄳ", "ㄴ", "ㄵ", "ㄶ", "ㄷ", "ㄹ", "ㄺ", "ㄻ", "ㄼ", "ㄽ", "ㄾ", "ㄿ", "ㅀ", "ㅁ", "ㅂ", "ㅄ", "ㅅ", "ㅆ", "ㅇ", "ㅈ", "ㅊ", "ㅋ", "ㅌ", "ㅍ", "ㅎ"];

    let code = char.charCodeAt(0);

    if ((code >= 0x3131 && code <= 0x314E) || (code >= 0x314F && code <= 0x3163)) {
        return {
            char: char,
            초성: CHO.includes(char) ? char : "없음",
            중성: JUNG.includes(char) ? char : "없음",
            종성: "없음"
        };
    }

    // 완전한 한글 음절(가~힣) 처리
    if (code >= 0xAC00 && code <= 0xD7A3) {
        let offset = code - 0xAC00;
        let choIndex = Math.floor(offset / (21 * 28));
        let jungIndex = Math.floor((offset % (21 * 28)) / 28);
        let jongIndex = offset % 28;

        return {
            char: char,
            초성: CHO[choIndex],
            중성: JUNG[jungIndex],
            종성: JONG[jongIndex] || "없음"
        };
    }

    return { char, message: "한글이 아닙니다.1" };
}

function response(msg, replier) {
    if (msg.startsWith("/분석 ")) {
        let inputText = msg.replace("/분석 ", "").trim();

        if (inputText.length === 0) {
            replier.reply("한 글자 이상 입력해 주세요.");
            return;
        }

        let responseMessage = "";
        let lastWasSpace = false;
        let processedText = inputText.replace(/ /g, "");
        let isSingleChar = processedText.length === 1;
        let count = 1;

        if (!isSingleChar) {
            responseMessage += `입력한 글자: ${inputText}\n\n`;
        }

        for (let i = 0; i < inputText.length; i++) {
            let char = inputText[i];

            if (char === " ") {
                lastWasSpace = true;
                continue;
            }

            let result = analyzeHangulChar(char);

            if (result.message) {
                responseMessage += isSingleChar
                    ? `입력한 글자: ${result.char}\n한글이 아닙니다.\n\n`
                    : `\n${count}번째 글자: ${result.char}\n한글이 아닙니다.\n\n`;
            } else {
                responseMessage += isSingleChar
                    ? `입력한 글자: ${result.char}\n` +
                    `초성: ${result.초성}\n` +
                    `중성: ${result.중성}\n` +
                    `종성: ${result.종성}\n`
                    : `${count}번째 글자: ${result.char}\n` +
                    `초성: ${result.초성}\n` +
                    `중성: ${result.중성}\n` +
                    `종성: ${result.종성}\n`;

                if (!isSingleChar && i < inputText.length - 1) {
                    if (lastWasSpace) {
                        responseMessage += "\n\n";
                        lastWasSpace = false;
                    } else {
                        responseMessage += "\n";
                    }
                }
            }
            count++;
        }

        replier.reply(responseMessage.trim());
    }
}
